#!/bin/bash

# chkconfig: 345 65 35
### BEGIN INIT INFO
# Provides:          opensips
# Required-Start:    rtpengine
# Required-Stop:     rtpengine
# Should-Stop:       
# Default-Start:     3 4 5
# Default-Stop:      0 1 2 6
# Description:       Opensips SIP Server
### END INIT INFO

### BEGIN INIT INFO
# Provides: opensips
# Required-Start:
# Required-Stop:
# Default-Start:     3 4 5
# Default-Stop:      0 1 2 6
# Short-Description: Blox Opensips proxy
# Description: Blox Opensips proxy
### END INIT INFO


export PATH=$PATH:/usr/local/sbin/

export STARTOPTIONS="-m512 -M32"

start_opensips() {
    opensipsctl start
}

stop_opensips() {
    opensipsctl stop
    source /usr/local/etc/opensips/opensipsctlrc

    #Remove the TLS and TCP connection state from the DB, as they become invalid, need re-registeration from SIP client
    mysql -u $DBRWUSER --password=$DBRWPW $DBNAME -e "DELETE FROM locationtrunk WHERE contact like '%transport=tls%';"
    mysql -u $DBRWUSER --password=$DBRWPW $DBNAME -e "DELETE FROM locationtrunk WHERE contact like '%transport=tcp%';"

    mysql -u $DBRWUSER --password=$DBRWPW $DBNAME -e "DELETE FROM locationpbx   WHERE contact like '%transport=tls%';"
    mysql -u $DBRWUSER --password=$DBRWPW $DBNAME -e "DELETE FROM locationpbx   WHERE contact like '%transport=tcp%';"
}

restart_opensips() {
    opensipsctl restart
}

status_opensips() {
    opensipsctl fifo get_statistics rcv_requests
    opensipsctl fifo get_statistics shmem:
}

setup_opensips() {
    ubuntu=$(python -mplatform | grep -i ubuntu)
    if [ -n "$ubuntu" ]
    then
    	update-rc.d mysql defaults
    else
    	/sbin/chkconfig mysqld --add
    	/sbin/chkconfig --level 345 mysqld on
    fi
    /etc/init.d/mysqld start
    source /usr/local/etc/opensips/opensipsctlrc

    OPENSIPS_DBVER=$(mysql -u $DBRWUSER --password=$DBRWPW -e "show databases" | grep "^opensips_" | head -1 | sed 's/^opensips_//')
    if [ -n "$OPENSIPS_DBVER" ] ; then
        BLOX_MIGRATE=$(cat /etc/.blox_migrate)
        /usr/bin/blox_db_install.sh $OPENSIPS_DBVER $BLOX_MIGRATE
    else
        /usr/bin/blox_db_install.sh
    fi
    
    rm /etc/.blox_setup
    rm /etc/.blox_migrate
}


usage() {
  echo "usage: $0 [start|stop|restart|status]" >&2;
}

case "$1" in
start)
    if [ -f /etc/.blox_setup ]
    then
        setup_opensips;
    fi
    start_opensips;
    ;;
stop)
    stop_opensips;
    ;;
restart)
    restart_opensips;
    ;;
status)
    status_opensips;
    ;;
*)
    usage;
    ;;
esac
