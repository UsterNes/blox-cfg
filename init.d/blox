#!/bin/bash

# chkconfig: 345 64 35
### BEGIN INIT INFO
# Provides: blox
# Required-Start:
# Required-Stop:
# Default-Start:     3 4 5
# Default-Stop:      0 1 2 6
# Short-Description: Blox utils 
# Description: Blox Utils and Scripts
### END INIT INFO


bloxngxdir=/usr/local/ngx-blox/
rundir=$bloxngxdir/run
logdir=$bloxngxdir/logs

start_blox() {
	mkdir -p $rundir $logdir
	/usr/local/ngx-blox/sbin/nginx 1>>$logdir/nginx-blox.startup 2>&1 
	if [ $? -eq 0 ]; then
		echo -e "\e[1;32mngx-blox Server Started... \e[0m"
	else
		echo -e "\e[1;31mngx-blox Server Failed to Start... \e[0m"
	fi
	nohup /usr/bin/send_notify.sh &
	nohup /usr/bin/listen_subscribe.sh &
		
}

stop_blox() {
	if [ -f $rundir/nginx.pid ]
	then
		kill $(cat $rundir/nginx.pid)
		if [ $? -eq 0 ]; then
			echo -e "\e[1;32mngx-blox Server Stopped... \e[0m"
		else
			echo -e "\e[1;31mngx-blox Server Failed to Stop... \e[0m"
		fi
	fi
}

restart_blox() {
	stop_blox
	start_blox
}

status_blox() {
	if [ -f $rundir/nginx.pid ]
	then
		PID=$(cat $rundir/nginx.pid)
	fi
	if [ -n "$PID" ]
	then
		echo -e "\e[1;32mngx-blox Server Running ... $PID\e[0m"
	else
		echo -e "\e[1;31mngx-blox Server Not Running ... \e[0m"
	fi	
}


usage() {
  echo "usage: $0 [start|stop|restart|status]" >&2;
}

case "$1" in
start)
      start_blox;;
stop)
      stop_blox;
      ;;
restart)
      restart_blox;
      ;;
status)
      status_blox;
      ;;
*)
     usage;
     ;;
esac
